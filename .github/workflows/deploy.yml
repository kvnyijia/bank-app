# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Deploy to production

on:
  push:
    branches: [ "master" ]

# Permission can be added at job level or workflow level    
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:

  deploy:
    name: Build image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.27.1' # default is latest stable, can refer here: https://storage.googleapis.com/kubernetes-release/release/stable.txt
      id: install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1.7.0
      with:
        role-to-assume: arn:aws:iam::322299679673:role/bank-app-to-ecr
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Load env vars from Secrets Manager & save to app.env
      run: aws secretsmanager get-secret-value --secret-id bank_app_envvar --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: bank-app # The name of the repo in AWS ECR
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
        docker push --all-tags $REGISTRY/$REPOSITORY
    
    - name: Update kube config
      run: aws eks update-kubeconfig --name bank-app-eks-cluster --region us-east-2

    - name: Deploy the latest docker image at ECR to EKS
      run: |
        kubectl apply -f eks/aws-auth.yaml
        kubectl apply -f eks/deployment.yaml
        kubectl apply -f eks/service.yaml
      # kubectl apply -f eks/issuer.yaml 
      # kubectl apply -f eks/ingress.yaml
